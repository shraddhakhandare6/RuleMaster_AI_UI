/*
  Custom stylesheet for the Copilot Sidebar to achieve a polished, modern look.
  - Scoped to the .copilot-chatbot wrapper and .copilot-sidebar-custom class to prevent style conflicts.
  - Uses flexbox for robust alignment.
  - Provides clear visual feedback for interactive elements (hover, focus).
*/

/*
  The CopilotSidebar component is wrapped in a custom div with the class "copilot-chatbot".
  We will style this wrapper first.
*/
.copilot-chatbot {
  background: hsl(var(--card));
  color: hsl(var(--card-foreground));
  border-radius: 1.5rem;
  box-shadow: 0 10px 35px -5px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border: 1px solid hsl(var(--border));
  max-height: 80vh; /* Ensure it doesn't take up the whole screen */
}

.copilot-chat-header {
  background: linear-gradient(90deg, hsl(var(--primary)) 0%, hsl(var(--accent)) 100%);
  padding: 1.5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.copilot-chat-avatar {
  background: white;
  color: hsl(var(--primary));
  font-weight: 700;
  font-size: 1.25rem;
  border-radius: 50%;
  width: 3rem;
  height: 3rem;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.copilot-chat-header .title {
  color: hsl(var(--primary-foreground));
  font-size: 1.25rem;
  font-weight: 700;
  line-height: 1.2;
  margin: 0;
}


/* 
  Main Copilot Sidebar container.
   The library adds a div with this class. We need to override some defaults.
   By targeting it within our custom wrapper, we ensure styles are scoped.
*/
.copilot-sidebar-custom {
  display: flex;
  flex-direction: column;
  height: 100%;
  flex-grow: 1;
  background: transparent !important; /* Override library background */
}

/* Messages container styling */
.copilot-sidebar-custom > div:first-of-type {
  flex: 1;
  padding: 1.25rem 1.5rem 0 1.5rem;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Chat bubble styling */
.copilot-sidebar-custom .copilot-message {
  max-width: 85%;
  margin-bottom: 1rem;
  position: relative;
  animation: messageFadeIn 0.3s ease-out;
}

@keyframes messageFadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.copilot-sidebar-custom .copilot-message-user .copilot-message-content {
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border-radius: 1.125rem 1.125rem 0.25rem 1.125rem;
  padding: 0.9rem 1.2rem;
  font-size: 1rem;
}

.copilot-sidebar-custom .copilot-message-assistant .copilot-message-content {
  background: hsl(var(--muted));
  color: hsl(var(--card-foreground));
  border-radius: 1.125rem 1.125rem 1.125rem 0.25rem;
  padding: 0.9rem 1.2rem;
  font-size: 1rem;
  border: 1px solid hsl(var(--border));
}

.copilot-sidebar-custom .copilot-message-assistant .copilot-message-content p {
  margin: 0;
}

/* Input Area Styling */
.copilot-sidebar-custom > div:last-of-type {
  padding: 1rem 1.5rem 1.25rem 1.5rem;
  background: hsl(var(--card));
  border-top: 1px solid hsl(var(--border));
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

/* Input container */
.copilot-sidebar-custom .copilot-input-container {
  position: relative;
  display: flex;
  align-items: center;
}

/* Textarea input */
.copilot-sidebar-custom textarea.copilot-input {
  width: 100%;
  border-radius: 2rem;
  border: 1px solid hsl(var(--border));
  background: hsl(var(--background));
  color: hsl(var(--foreground));
  padding: 0.75rem 3.5rem 0.75rem 1.25rem;
  font-size: 1rem;
  outline: none;
  transition: border-color 0.2s, box-shadow 0.2s;
  min-height: 48px;
  max-height: 120px;
  resize: none;
}

/* Input highlight on focus */
.copilot-sidebar-custom textarea.copilot-input:focus {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 2px hsla(var(--primary), 0.2);
}

/* Send button */
.copilot-sidebar-custom button[aria-label="Send"] {
  position: absolute;
  right: 0.5rem;
  top: 50%;
  transform: translateY(-50%);
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border: none;
  border-radius: 50%;
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.2s;
}

.copilot-sidebar-custom button[aria-label="Send"]:hover {
  background: hsla(var(--primary), 0.9);
}

.copilot-sidebar-custom button[aria-label="Send"] > svg {
  width: 1.25rem;
  height: 1.25rem;
}

/* Suggestion chips */
.copilot-sidebar-custom .copilot-suggestions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.copilot-sidebar-custom .copilot-suggestion {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  color: hsl(var(--primary));
  border-radius: 2rem;
  padding: 0.5rem 1.1rem;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.18s, border-color 0.18s;
}

.copilot-sidebar-custom .copilot-suggestion:hover {
  background-color: hsla(var(--primary), 0.1);
  border-color: hsla(var(--primary), 0.5);
}


/*
  Fixing the default open/close toggle button.
  The user doesn't need it because the sidebar is always open,
  so we'll hide it properly to prevent layout issues.
*/
.copilotKitButton {
  display: none !important;
}


/*
  Fixing the "CopilotKit Help" section.
  The library renders it as a button with a popover.
  We will style the button to be a subtle link and ensure the popover is aligned.
*/
.copilot-sidebar-custom button[aria-label="Help"] {
  font-size: 0.8rem;
  color: hsl(var(--muted-foreground));
  text-decoration: none;
  background: none;
  border: none;
  cursor: pointer;
  margin: 0 auto; /* Center the help link */
  padding: 0;
}

.copilot-sidebar-custom button[aria-label="Help"]:hover {
  text-decoration: underline;
  color: hsl(var(--foreground));
}

/*
  The user mentioned these classes. While the button is hidden,
  having these selectors ensures that if they ever become visible,
  they won't break the layout. We will just ensure they are hidden.
*/
.copilotKitButtonIcon,
.copilotKitButtonIconOpen,
.copilotKitButtonIconClose {
  display: none !important;
}
